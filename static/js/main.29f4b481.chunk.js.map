{"version":3,"sources":["DetailedTable/DetailedList.jsx","DetailedTable/index.jsx","services/AuthService.js","Components/TextInput.jsx","Components/PrimaryButton.jsx","Signin/SigninForm.jsx","Signin/index.jsx","App.js","serviceWorker.js","index.js"],"names":["CustomTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","id","createData","name","calories","fat","carbs","root","width","marginTop","spacing","unit","overflowX","table","minWidth","row","&:nth-of-type(odd)","background","default","props","classes","console","log","userData","react_default","a","createElement","Paper_default","className","Table_default","style","tableLayout","TableHead_default","TableRow_default","align","TableBody_default","map","key","component","scope","title","lat","lng","paddingLeft","message","_default","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","user","TOKEN","localStorage","getItem","axiosInstance","axios","create","baseURL","headers","Authorization","concat","get","response","setState","data","error","_context","t0","DetailedList","React","Component","AuthHelperMethods","login","grant_type","email","password","fetch","method","JSON","stringify","then","res","setToken","access_token","Promise","resolve","loggedIn","token","getToken","isTokenExpired","decode","exp","Date","now","err","idToken","setItem","getConfirm","answer","url","options","Accept","Content-Type","objectSpread","_checkStatus","json","status","Error","statusText","TextInput","Fragment","index_es","assign","margin","variant","formik_esm","render","msg","PrimaryButton","_ref","children","rest","objectWithoutProperties","height","borderRadius","SigninForm","errors","elevation","paper","border","container","justify","paddingRight","marginBottom","fontFamily","_ref2","field","label","_ref3","type","validationSchema","Yup","required","initialValues","handleSubmit","values","Auth","redirect","alert","catch","AuthService","BrowserRouter","Route","exact","path","DetailedTable","onSubmit","onChange","handleChange","App","alignItems","minHeight","Signin_default","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29f4b481.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n});\n\nlet id = 0;\nfunction createData(name, calories, fat, carbs) {\n  id += 1;\n  return { id, name, calories, fat, carbs };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24),\n  createData('Ice cream sandwich', 237, 9.0, 37),\n  createData('Eclair', 262, 16.0, 24),\n  createData('Cupcake', 305, 3.7, 67),\n  createData('Gingerbread', 356, 16.0, 49),\n];\n\nfunction CustomizedTable(props) {\n  const { classes } = props;\n\n  console.log(props.userData);\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table} style={{ tableLayout: 'auto' }}>\n        <TableHead>\n          <TableRow>\n            <CustomTableCell>Title</CustomTableCell>\n            <CustomTableCell align=\"right\">Lattitude</CustomTableCell>\n            <CustomTableCell align=\"right\">Longitude</CustomTableCell>\n            <CustomTableCell align=\"center\">Message</CustomTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.userData.map(row => (\n            <TableRow className={classes.row} key={row.id}>\n              <CustomTableCell component=\"th\" scope=\"row\">\n                {row.title}\n              </CustomTableCell>\n              <CustomTableCell align=\"right\">{row.lat}</CustomTableCell>\n              <CustomTableCell align=\"right\">{row.lng}</CustomTableCell>\n              <CustomTableCell align=\"\" style={{paddingLeft: 160}}>{row.message}</CustomTableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nCustomizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CustomizedTable);","import React from 'react';\nimport CustomizedTable from './DetailedList';\nimport axios from 'axios';\n\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: []\n        }\n    }\n\n    async componentDidMount() {\n\n        const TOKEN = localStorage.getItem(\"id_token\")\n        var axiosInstance = axios.create({\n            baseURL: 'https://blooming-cove-35281.herokuapp.com',\n            headers: {\n            'Authorization': `Bearer ${TOKEN}`\n            }\n        })\n        try {\n            let response = await axiosInstance.get('/api/geo_caches')\n            this.setState({\n                user: response.data\n            })\n        } catch (err) {\n            console.error(err)\n        }\n    }\n  \n\n\n\n   \n    render() {\n        \n        return (\n                <CustomizedTable userData={this.state.user} />\n                  \n        );\n    }\n}","import decode from \"jwt-decode\";\n\nexport default class AuthHelperMethods {\n  \n  login = (grant_type,email, password) => {\n    return this.fetch(`https://blooming-cove-35281.herokuapp.com/api/oauth/token`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        grant_type,\n        email,\n        password\n      })\n    }).then(res => {\n      this.setToken(res.access_token); \n      return Promise.resolve(res);\n    });\n  };\n\n  loggedIn = () => {\n    const token = this.getToken(); \n    return !!token && !this.isTokenExpired(token);\n  };\n\n  isTokenExpired = token => {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      console.log(\"expired check failed!\");\n      return false;\n    }\n  };\n\n  setToken = idToken => {\n    localStorage.setItem(\"id_token\", idToken);\n  };\n\n  getToken = () => {\n    return localStorage.getItem(\"id_token\");\n  };\n\n\n  getConfirm = () => {\n    let answer = decode(this.getToken());\n    console.log(\"Token Decoded!\");\n    return answer;\n  };\n\n  fetch = (url, options) => {\n    const headers = {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    };\n    if (this.loggedIn()) {\n      headers[\"Authorization\"] = \"Bearer \" + this.getToken();\n    }\n\n    return fetch(url, {\n      headers,\n      ...options\n    })\n      .then(this._checkStatus)\n      .then(response => response.json());\n  };\n\n  _checkStatus = response => {\n    if (response.status >= 200 && response.status < 300) {\n      return response;\n    } else {\n      var error = new Error(response.statusText);\n      error.response = response;\n      throw error;\n    }\n  };\n}\n","import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { ErrorMessage } from 'formik';\n\nexport default (props) => (\n    <React.Fragment>\n        <TextField\n            margin=\"dense\"\n            style = {{width: '100%'}}\n            variant=\"outlined\"\n            {...props}\n        />\n        <ErrorMessage name={props.name} render={(msg) =>\n            <div style={{ color: 'red', width: '100%' }}>{msg}</div>\n        }/>\n    </React.Fragment>\n);\n","import React from 'react';\nimport { Button } from '@material-ui/core';\n\nexport default ({ children, ...rest }) => (\n    <Button \n        style={{width: '100%', height: 60, marginTop: 15, borderRadius: 0, background: 'linear-gradient(to right bottom, #008ED4, #1BC4F3)'}} \n        variant=\"contained\"\n        color=\"primary\"\n        {...rest}\n        >\n        {children}\n    </Button>\n)","import React from 'react';\nimport { Field, Form } from \"formik\";\nimport { Paper, Grid } from '@material-ui/core';\n\nimport TextInput from '../Components/TextInput';\nimport PrimaryButton from '../Components/PrimaryButton';\n\n\n\nexport default ({ errors, classes }) => (\n    <Paper elevation={1} className={classes.paper}>\n        <Form>\n            <Paper style={{border: '1px solid black', width: 600, height: 400, backgroundColor: '#EDF6FF'}}>\n                <Grid container justify = \"center\" style={{ paddingLeft: 48, paddingRight: 48 }}>\n                    <p style={{fontSize: 40, marginBottom: 15, marginTop: 10, fontFamily: 'sans-serif'}}><b>Sign in</b></p>\n                                      \n                    <Field \n                        name=\"email\"\n                        render={({ field }) => (\n                            <TextInput error={errors.email} {...field} label=\"Email\" />\n                        )} \n                    />\n\n                    <Field \n                        name=\"password\"\n                        render={({ field }) => (\n                            <TextInput error={errors.password} type=\"password\" {...field} label=\"Password\" />\n                        )} \n                    />\n\n                    <PrimaryButton type=\"submit\">\n                        SIGN IN\n                    </PrimaryButton>\n                </Grid>\n            </Paper>\n        </Form>\n    </Paper>\n)","import React from 'react';\nimport * as Yup from \"yup\"\nimport { Formik } from \"formik\";\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport DetailedTable from '../DetailedTable'\nimport AuthService from '../services/AuthService'\nimport SigninForm from './SigninForm';\n\n\nconst validationSchema = Yup.object({\n    email: Yup.string()\n        .required(\"Email is required\"),\n    password: Yup.string()\n        .required('Password is required field')\n});\n\nconst initialValues = { \n    email: \"\", \n    password: '' \n};\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          email: '',\n          password: '',\n          redirect: false\n        };\n\n        this.Auth = new AuthService();\n      }\n\n    handleSubmit = (values) => {\n         this.setState({email: values.email, password: values.password });\n         this.Auth.login(\"password\",this.state.email,this.state.password)\n            .then(res => {\n                if(res.access_token){\n                    this.setState({redirect: true});\n                }\n                else{\n                    alert(res.error)\n                }\n  \n            })\n            .catch(err => {\n                alert(\"this is catch block error\");\n            })\n         console.log(this.state);\n         \n    }\n\n    render() {\n\n        if(this.state.redirect){\n            return (\n                <BrowserRouter>\n                        <Route exact path='/' component={DetailedTable} />\n                </BrowserRouter>\n            )\n        }\n        const classes = this.props;\n        \n        return (\n            <div className={classes.container}>\n                <Formik\n                  initialValues={initialValues}\n                  validationSchema={validationSchema}\n                  onSubmit={this.handleSubmit}\n                  onChange={this.handleChange}\n                >\n                    {({ errors }) => (\n                        <SigninForm \n                            errors={errors} \n                            classes={classes} \n                        />\n                    )}\n                </Formik>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { Grid } from '@material-ui/core'\nimport Signin from './Signin';\n\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Grid \n        container\n        spacing={0}\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ minHeight: '100vh', backgroundColor: '#EDF6FF' }}>\n        <Signin />\n      </Grid>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}